// This benchmark stresses just method invocation.

struct Foo {
}

fun Foo.method0() {}
fun Foo.method1() {}
fun Foo.method2() {}
fun Foo.method3() {}
fun Foo.method4() {}
fun Foo.method5() {}
fun Foo.method6() {}
fun Foo.method7() {}
fun Foo.method8() {}
fun Foo.method9() {}
fun Foo.method10() {}
fun Foo.method11() {}
fun Foo.method12() {}
fun Foo.method13() {}
fun Foo.method14() {}
fun Foo.method15() {}
fun Foo.method16() {}
fun Foo.method17() {}
fun Foo.method18() {}
fun Foo.method19() {}
fun Foo.method20() {}
fun Foo.method21() {}
fun Foo.method22() {}
fun Foo.method23() {}
fun Foo.method24() {}
fun Foo.method25() {}
fun Foo.method26() {}
fun Foo.method27() {}
fun Foo.method28() {}
fun Foo.method29() {}

var foo = Foo();
var start = clock();
var i = 0;
while (i < 500000) {
  foo.method0();
  foo.method1();
  foo.method2();
  foo.method3();
  foo.method4();
  foo.method5();
  foo.method6();
  foo.method7();
  foo.method8();
  foo.method9();
  foo.method10();
  foo.method11();
  foo.method12();
  foo.method13();
  foo.method14();
  foo.method15();
  foo.method16();
  foo.method17();
  foo.method18();
  foo.method19();
  foo.method20();
  foo.method21();
  foo.method22();
  foo.method23();
  foo.method24();
  foo.method25();
  foo.method26();
  foo.method27();
  foo.method28();
  foo.method29();
  i = i + 1;
}

print(clock() - start);
