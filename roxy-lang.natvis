<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
    <Type Name="rx::Vector&lt;*,*&gt;">
        <Expand>
            <Item Name="[size]">m_size</Item>
            <Item Name="[capacity]">m_capacity</Item>
            <ArrayItems>
                <Size>m_size</Size>
                <ValuePointer>m_data</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>
    <Type Name="rx::Span&lt;*,*&gt;">
        <Expand>
            <Item Name="[size]">m_size</Item>
            <ArrayItems>
                <Size>m_size</Size>
                <ValuePointer>m_data</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>
    <Type Name="rx::Array&lt;*,_Size&gt;">
        <Expand>
            <ArrayItems>
                <Size>_Size</Size>
                <ValuePointer>m_data</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>
    <Type Name="rx::RelPtr&lt;*,*&gt;">
        <Expand>
            <SmartPointer Usage="Minimal">($T1*)((u8*)(&amp;m_offset) + m_offset)</SmartPointer>
            <Item Name="[ptr]">($T1*)((u8*)(&amp;m_offset) + m_offset)</Item>
        </Expand>
    </Type>
    <Type Name="rx::RelSpan&lt;*,*&gt;">
        <Expand>
            <Item Name="[size]">m_size</Item>
            <ArrayItems>
                <Size>m_size</Size>
                <ValuePointer>($T1*)((u8*)(&amp;m_data.m_offset) + m_data.m_offset)</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>
    <Type Name="rx::Token">
        <DisplayString>{start,[length]su}</DisplayString>
        <StringView>start,[length]su</StringView>
        <Expand>
            <Item Name="[line]">line</Item>
            <Item Name="[kind]">kind</Item>
            <Item Name="[length]">length</Item>
        </Expand>
    </Type>
    <Type Name="rx::ObjString">
        <DisplayString>{(char*)chars,[length]su}</DisplayString>
        <StringView>(char*)chars,[length]su</StringView>
        <Expand>
            <Item Name="[length]">length</Item>
            <Item Name="[hash]">hash</Item>
        </Expand>
    </Type>
    <!--
    <Type Name="rx::Expression">
        <Expand>
            <Item Name="[Error]" Condition="kind == ExprKind::Error">(ErrorExpr*)this</Item>
            <Item Name="[Assign]" Condition="kind == ExprKind::Assign">(AssignExpr*)this</Item>
            <Item Name="[Binary]" Condition="kind == ExprKind::Binary">(BinaryExpr*)this</Item>
            <Item Name="[Ternary]" Condition="kind == ExprKind::Ternary">(TernaryExpr*)this</Item>
            <Item Name="[Grouping]" Condition="kind == ExprKind::Grouping">(GroupingExpr*)this</Item>
            <Item Name="[Literal]" Condition="kind == ExprKind::Literal">(LiteralExpr*)this</Item>
            <Item Name="[Unary]" Condition="kind == ExprKind::Unary">(UnaryExpr*)this</Item>
            <Item Name="[Variable]" Condition="kind == ExprKind::Variable">(VariableExpr*)this</Item>
        </Expand>
    </Type>
    <Type Name="rx::Stmt">
        <Expand>
            <ExpandedItem Name="[Error]" Condition="kind == StmtKind::Error">*(ErrorStmt*)this,nd</ExpandedItem>
            <ExpandedItem Name="[Block]" Condition="kind == StmtKind::Block" ExcludeView="simple">*(BlockStmt*)this,nd</ExpandedItem>
            <ExpandedItem Name="[Expression]" Condition="kind == StmtKind::Expression">*(ExpressionStmt*)this,nd</ExpandedItem>
            <ExpandedItem Name="[If]" Condition="kind == StmtKind::If">*(IfStmt*)this,nd</ExpandedItem>
            <ExpandedItem Name="[Print]" Condition="kind == StmtKind::Print">*(PrintStmt*)this,nd</ExpandedItem>
            <ExpandedItem Name="[Var]" Condition="kind == StmtKind::Var">*(VarStmt*)this,nd</ExpandedItem>
            <ExpandedItem Name="[While]" Condition="kind == StmtKind::While">*(WhileStmt*)this,nd</ExpandedItem>
            <ExpandedItem Name="[Break]" Condition="kind == StmtKind::Break">*(BreakStmt*)this,nd</ExpandedItem>
        </Expand>
    </Type>
    -->
</AutoVisualizer>